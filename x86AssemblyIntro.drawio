<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (X11; Linux x86_64; rv:135.0) Gecko/20100101 Firefox/135.0" version="26.0.16">
  <diagram name="Page-1" id="MmO24SSt0OztSbwh3Snu">
    <mxGraphModel dx="1687" dy="928" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="0B55MSK7TP3gt0dwLM_n-58" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;" edge="1" parent="1" source="0B55MSK7TP3gt0dwLM_n-1" target="0B55MSK7TP3gt0dwLM_n-54">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="410" y="30" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-59" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="0B55MSK7TP3gt0dwLM_n-1" target="0B55MSK7TP3gt0dwLM_n-40">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-60" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="400" y="80" as="sourcePoint" />
            <mxPoint x="640" y="1058" as="targetPoint" />
            <Array as="points">
              <mxPoint x="680" y="80" />
              <mxPoint x="680" y="370" />
              <mxPoint x="660" y="370" />
              <mxPoint x="660" y="1058" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-1" value="&lt;h1&gt;&lt;b&gt;x86 Assembly&lt;/b&gt;&lt;/h1&gt;&lt;h3&gt;32 Bits&lt;/h3&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="220" y="20" width="180" height="80" as="geometry" />
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-3" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.43;entryY=0.008;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="0B55MSK7TP3gt0dwLM_n-1" target="0B55MSK7TP3gt0dwLM_n-28">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="280" y="200" as="sourcePoint" />
            <mxPoint x="130" y="140" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-28" value="Registers" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="60" y="140" width="580" height="430" as="geometry">
            <mxRectangle x="60" y="140" width="60" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-40" value="&lt;div&gt;RAX/EAX/AX/AH/AL Acumulador; Usado para Input/output calculos e retorna o valor das funções&lt;/div&gt;&lt;br&gt;&lt;div&gt;RBX/EBX/BX/BH/BL Base; Usado para endereços indexados (usa um registrador como base e um como index)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RCX/ECX/CX/CH/CL Calculos; Armazena contagem de um loop&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RDX/EDX/DX/DH/DL Dados; Input/output, as vezes auxilia o registrador RAX para multiplicar/dividir&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RSP/ESP/SP/SPL Stack Pointer; Armazena a posição atual da Stack&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RBP/EBP/BP/BPL Base Pointer; Ajuda na referência de parâmetros e em outras variáveis da stack como desvio da &quot;base da stack&quot;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RSI/ESI/SI/SIL Usado como um index base para operações em Strings&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RDI/EDI/DI/DIL Usado como index destino para operações em Strings&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RIP/EIP/IP Armazena a proxima instrução a ser executada&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;R8-R15 x64 Registradores de uso geral&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;CS/DS/SS/ES/FS/GS Segmentos de registradores em 16 bits para acessar segmentos especificos da memória como: Code (.text)/Data (.data)/Stack/Extra/General/General&lt;/div&gt;RFLAGS/EFLAGS" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="0B55MSK7TP3gt0dwLM_n-28">
          <mxGeometry y="30" width="580" height="400" as="geometry" />
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-50" value="Intructions" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;" vertex="1" parent="1">
          <mxGeometry x="60" y="610" width="580" height="910" as="geometry" />
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-51" value="&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;MOV dest, src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Move dados de &lt;code&gt;src&lt;/code&gt; para &lt;code&gt;dest&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;PUSH src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Empilha &lt;code&gt;src&lt;/code&gt; na pilha.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;POP dest&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Desempilha o topo da pilha para &lt;code&gt;dest&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;LEA dest, src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Calcula o endereço efetivo de &lt;code&gt;src&lt;/code&gt; e armazena em &lt;code&gt;dest&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;XCHG op1, op2&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Troca os valores de &lt;code&gt;op1&lt;/code&gt; e &lt;code&gt;op2&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;2 - Instruções Aritméticas&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;ADD dest, src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Soma &lt;code&gt;dest&lt;/code&gt; e &lt;code&gt;src&lt;/code&gt;, armazenando o resultado em &lt;code&gt;dest&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;SUB dest, src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Subtrai &lt;code&gt;src&lt;/code&gt; de &lt;code&gt;dest&lt;/code&gt;, armazenando o resultado em &lt;code&gt;dest&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;MUL src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Multiplica &lt;code&gt;AL/AX/EAX&lt;/code&gt; por &lt;code&gt;src&lt;/code&gt; (sem sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;IMUL src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Multiplica &lt;code&gt;AL/AX/EAX&lt;/code&gt; por &lt;code&gt;src&lt;/code&gt; (com sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;DIV src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Divide &lt;code&gt;AX/EAX&lt;/code&gt; por &lt;code&gt;src&lt;/code&gt; (sem sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;IDIV src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Divide &lt;code&gt;AX/EAX&lt;/code&gt; por &lt;code&gt;src&lt;/code&gt; (com sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;INC dest&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Incrementa &lt;code&gt;dest&lt;/code&gt; em 1.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;DEC dest&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Decrementa &lt;code&gt;dest&lt;/code&gt; em 1.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;NEG dest&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Inverte o sinal de &lt;code&gt;dest&lt;/code&gt; (complemento de 2).&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;3 - Instruções Lógicas e de Bits&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;AND dest, src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Operação lógica &lt;strong&gt;AND&lt;/strong&gt; entre &lt;code&gt;dest&lt;/code&gt; e &lt;code&gt;src&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;OR dest, src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Operação lógica &lt;strong&gt;OR&lt;/strong&gt; entre &lt;code&gt;dest&lt;/code&gt; e &lt;code&gt;src&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;XOR dest, src&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Operação lógica &lt;strong&gt;XOR&lt;/strong&gt; entre &lt;code&gt;dest&lt;/code&gt; e &lt;code&gt;src&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;NOT dest&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Inverte todos os bits de &lt;code&gt;dest&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;SHL dest, cnt&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Desloca &lt;code&gt;dest&lt;/code&gt; para a esquerda por &lt;code&gt;cnt&lt;/code&gt; bits.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;SHR dest, cnt&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Desloca &lt;code&gt;dest&lt;/code&gt; para a direita por &lt;code&gt;cnt&lt;/code&gt; bits (sem sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;SAR dest, cnt&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Desloca &lt;code&gt;dest&lt;/code&gt; para a direita por &lt;code&gt;cnt&lt;/code&gt; bits (com sinal).&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr&gt;&lt;div&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/div&gt;&lt;div&gt;&lt;strong&gt;4 - Saltos e Loops&lt;/strong&gt;&lt;/div&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;th&gt;&lt;br&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;JMP label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Salta incondicionalmente para &lt;code&gt;label&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;JE/JZ label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Salta se &lt;strong&gt;igual/zero&lt;/strong&gt; (ZF=1).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;JNE/JNZ label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Salta se &lt;strong&gt;não igual/não zero&lt;/strong&gt; (ZF=0).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;JG/JNLE label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Salta se &lt;strong&gt;maior&lt;/strong&gt; (com sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;JL/JNGE label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Salta se &lt;strong&gt;menor&lt;/strong&gt; (com sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;JA/JNBE label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Salta se &lt;strong&gt;maior&lt;/strong&gt; (sem sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;JB/JNAE label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Salta se &lt;strong&gt;menor&lt;/strong&gt; (sem sinal).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;LOOP label&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Decrementa &lt;code&gt;ECX&lt;/code&gt; e salta se &lt;code&gt;ECX ≠ 0&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;CALL proc&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Chama uma sub-rotina/procedimento.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;RET&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Retorna de uma sub-rotina.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="0B55MSK7TP3gt0dwLM_n-50">
          <mxGeometry y="26" width="580" height="884" as="geometry" />
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-54" value="Memória principal/RAM" style="swimlane;startSize=23;" vertex="1" parent="1">
          <mxGeometry x="730" y="140" width="540" height="210" as="geometry" />
        </mxCell>
        <mxCell id="0B55MSK7TP3gt0dwLM_n-56" value="&lt;div align=&quot;left&quot;&gt;.text = Instruções do programa&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;.data = valores inicalizados, valores estáticos (.rdata == &quot;Read-Only Data&quot;)&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;.bss = (block starting symbol) Variáveis estáticas não inicializadas (zeradas)&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;Heap = Dinamicamente Alocado (alocado durante a execução) e cresce em direção aos valores&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;maiores da memória ↓&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;Stack = Variável Local, parametros de funções, retorna endereços e cresce em direção a valores&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;menores da memória↑&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="0B55MSK7TP3gt0dwLM_n-54">
          <mxGeometry y="25" width="540" height="170" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
